(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>i});var r=t(537),a=t.n(r),o=t(645),A=t.n(o)()(a());A.push([n.id,'/* Meyer reset */\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* Variables */\n\n:root {\n  --red: #f4442e;\n  --white: #fcfcfc;\n  --green: #06d6a0;\n  --yellow: #ffd166;\n  --blue: #26547c;\n  --lightgrey: #95a3b3;\n  --black: #130303;\n  --accent: orange;\n\n  --plate-height: 100px;\n  --plate-width: 20px;\n\n  --x-large: 1;\n  --large: 0.85;\n  --medium: 0.65;\n  --small: 0.45;\n  --x-small: 0.3;\n  --xx-small: 0.2;\n}\n\nbody {\n  background-color: var(--black);\n  font-family: "Inter", sans-serif;\n  min-height: 100vh;\n  position: relative;\n  padding-bottom: 25px;\n}\n\n#header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n}\n\n#header a {\n  background-color: var(--lightgrey);\n  border-radius: 100%;\n  display: block;\n  width: 45px;\n  height: 45px;\n}\n\n#header h1 {\n  font-weight: 200;\n  font-size: 1.25rem;\n  color: var(--white);\n  margin: 0 auto;\n}\n\n#wrapper {\n  margin: 1ch;\n  max-width: 800px;\n}\n\n.card {\n  padding: 2em;\n  color: var(--black);\n  text-decoration: none;\n  background-color: var(--white);\n  display: block;\n  border-radius: 25px;\n  max-width: 800px;\n  margin: 0 auto 1ch auto;\n}\n\n.card h2 {\n  font-size: 1.25rem;\n  font-weight: bold;\n  margin-bottom: 0.5em;\n}\n\n#visualizer {\n  text-align: center;\n  padding-top: 35px;\n  margin: 0 2ch 20px 2ch;\n  min-height: 150px;\n}\n\n.display {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 15px;\n  font-weight: bold;\n  padding: 25px;\n  text-align: center;\n  margin: auto;\n  max-width: 75%;\n  background: var(--lightgrey);\n  border-bottom-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n  color: var(--white);\n  position: relative;\n  font-size: 3rem;\n}\n\n.error {\n  animation: shake 150ms;\n}\n\n@keyframes shake {\n  0% {\n    transform: translate(0, 0);\n  }\n  13% {\n    transform: translate(3px, 0);\n  }\n  38% {\n    transform: translate(-3px, 0);\n  }\n  63% {\n    transform: translate(3px, 0);\n  }\n  87% {\n    transform: translate(-3px, 0);\n  }\n  100% {\n    transform: translate(0, 0);\n  }\n}\n\n.display #unit {\n  font-size: 1rem;\n  text-transform: uppercase;\n  display: block;\n}\n\n.display button {\n  font-size: 1.25rem;\n  background-color: var(--accent);\n  color: var(--white);\n  height: 2.5em;\n  width: 2.5em;\n  text-align: center;\n  display: inline-block;\n  cursor: pointer;\n  border-width: 0;\n  border-radius: 100%;\n}\n\n.keypad {\n  min-height: 250px;\n  display: grid;\n  grid-template-columns: 33% 33% 33%;\n  grid-template-rows: auto;\n  border-radius: 25px;\n  box-shadow:\n    0px 0.9px 1.3px hsl(200 200 200 / 0.03),\n    0.1px 3.6px 5.2px -0.1px hsl(200 200 200 / 0.12),\n    0.1px 7.3px 10.6px -0.2px hsl(200 200 200 / 0.2),\n    0.2px 14.9px 21.6px -0.4px hsl(200 200 200 / 0.29);\n}\n\n.keypad button {\n  border-width: 0;\n  background-color: #eee;\n  border-radius: 25px;\n  font-size: 1.25rem;\n  padding: 10px;\n  margin: 5px;\n  color: var(--black);\n  cursor: pointer;\n}\n\n#copyright {\n  text-align: center;\n  position: absolute;\n  width: 100%;\n  font-size: 0.75rem;\n  color: var(--lightgrey);\n  bottom: 10px;\n}\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA,gBAAgB;;AAEhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAiFE,SAAS;EACT,UAAU;EACV,SAAS;EACT,eAAe;EACf,aAAa;EACb,wBAAwB;AAC1B;AACA,gDAAgD;AAChD;;;;;;;;;;;EAWE,cAAc;AAChB;AACA;EACE,cAAc;AAChB;AACA;;EAEE,gBAAgB;AAClB;AACA;;EAEE,YAAY;AACd;AACA;;;;EAIE,WAAW;EACX,aAAa;AACf;AACA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA,cAAc;;AAEd;EACE,cAAc;EACd,gBAAgB;EAChB,gBAAgB;EAChB,iBAAiB;EACjB,eAAe;EACf,oBAAoB;EACpB,gBAAgB;EAChB,gBAAgB;;EAEhB,qBAAqB;EACrB,mBAAmB;;EAEnB,YAAY;EACZ,aAAa;EACb,cAAc;EACd,aAAa;EACb,cAAc;EACd,eAAe;AACjB;;AAEA;EACE,8BAA8B;EAC9B,gCAAgC;EAChC,iBAAiB;EACjB,kBAAkB;EAClB,oBAAoB;AACtB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;AACf;;AAEA;EACE,kCAAkC;EAClC,mBAAmB;EACnB,cAAc;EACd,WAAW;EACX,YAAY;AACd;;AAEA;EACE,gBAAgB;EAChB,kBAAkB;EAClB,mBAAmB;EACnB,cAAc;AAChB;;AAEA;EACE,WAAW;EACX,gBAAgB;AAClB;;AAEA;EACE,YAAY;EACZ,mBAAmB;EACnB,qBAAqB;EACrB,8BAA8B;EAC9B,cAAc;EACd,mBAAmB;EACnB,gBAAgB;EAChB,uBAAuB;AACzB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;EAClB,iBAAiB;EACjB,sBAAsB;EACtB,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,6BAA6B;EAC7B,mBAAmB;EACnB,iBAAiB;EACjB,aAAa;EACb,kBAAkB;EAClB,YAAY;EACZ,cAAc;EACd,4BAA4B;EAC5B,+BAA+B;EAC/B,8BAA8B;EAC9B,mBAAmB;EACnB,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,sBAAsB;AACxB;;AAEA;EACE;IACE,0BAA0B;EAC5B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,4BAA4B;EAC9B;EACA;IACE,6BAA6B;EAC/B;EACA;IACE,0BAA0B;EAC5B;AACF;;AAEA;EACE,eAAe;EACf,yBAAyB;EACzB,cAAc;AAChB;;AAEA;EACE,kBAAkB;EAClB,+BAA+B;EAC/B,mBAAmB;EACnB,aAAa;EACb,YAAY;EACZ,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;EACf,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,iBAAiB;EACjB,aAAa;EACb,kCAAkC;EAClC,wBAAwB;EACxB,mBAAmB;EACnB;;;;sDAIoD;AACtD;;AAEA;EACE,eAAe;EACf,sBAAsB;EACtB,mBAAmB;EACnB,kBAAkB;EAClB,aAAa;EACb,WAAW;EACX,mBAAmB;EACnB,eAAe;AACjB;;AAEA;EACE,kBAAkB;EAClB,kBAAkB;EAClB,WAAW;EACX,kBAAkB;EAClB,uBAAuB;EACvB,YAAY;AACd",sourcesContent:['/* Meyer reset */\n\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\nbody {\n  line-height: 1;\n}\nol,\nul {\n  list-style: none;\n}\nblockquote,\nq {\n  quotes: none;\n}\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: "";\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n/* Variables */\n\n:root {\n  --red: #f4442e;\n  --white: #fcfcfc;\n  --green: #06d6a0;\n  --yellow: #ffd166;\n  --blue: #26547c;\n  --lightgrey: #95a3b3;\n  --black: #130303;\n  --accent: orange;\n\n  --plate-height: 100px;\n  --plate-width: 20px;\n\n  --x-large: 1;\n  --large: 0.85;\n  --medium: 0.65;\n  --small: 0.45;\n  --x-small: 0.3;\n  --xx-small: 0.2;\n}\n\nbody {\n  background-color: var(--black);\n  font-family: "Inter", sans-serif;\n  min-height: 100vh;\n  position: relative;\n  padding-bottom: 25px;\n}\n\n#header {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n}\n\n#header a {\n  background-color: var(--lightgrey);\n  border-radius: 100%;\n  display: block;\n  width: 45px;\n  height: 45px;\n}\n\n#header h1 {\n  font-weight: 200;\n  font-size: 1.25rem;\n  color: var(--white);\n  margin: 0 auto;\n}\n\n#wrapper {\n  margin: 1ch;\n  max-width: 800px;\n}\n\n.card {\n  padding: 2em;\n  color: var(--black);\n  text-decoration: none;\n  background-color: var(--white);\n  display: block;\n  border-radius: 25px;\n  max-width: 800px;\n  margin: 0 auto 1ch auto;\n}\n\n.card h2 {\n  font-size: 1.25rem;\n  font-weight: bold;\n  margin-bottom: 0.5em;\n}\n\n#visualizer {\n  text-align: center;\n  padding-top: 35px;\n  margin: 0 2ch 20px 2ch;\n  min-height: 150px;\n}\n\n.display {\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 15px;\n  font-weight: bold;\n  padding: 25px;\n  text-align: center;\n  margin: auto;\n  max-width: 75%;\n  background: var(--lightgrey);\n  border-bottom-right-radius: 0px;\n  border-bottom-left-radius: 0px;\n  color: var(--white);\n  position: relative;\n  font-size: 3rem;\n}\n\n.error {\n  animation: shake 150ms;\n}\n\n@keyframes shake {\n  0% {\n    transform: translate(0, 0);\n  }\n  13% {\n    transform: translate(3px, 0);\n  }\n  38% {\n    transform: translate(-3px, 0);\n  }\n  63% {\n    transform: translate(3px, 0);\n  }\n  87% {\n    transform: translate(-3px, 0);\n  }\n  100% {\n    transform: translate(0, 0);\n  }\n}\n\n.display #unit {\n  font-size: 1rem;\n  text-transform: uppercase;\n  display: block;\n}\n\n.display button {\n  font-size: 1.25rem;\n  background-color: var(--accent);\n  color: var(--white);\n  height: 2.5em;\n  width: 2.5em;\n  text-align: center;\n  display: inline-block;\n  cursor: pointer;\n  border-width: 0;\n  border-radius: 100%;\n}\n\n.keypad {\n  min-height: 250px;\n  display: grid;\n  grid-template-columns: 33% 33% 33%;\n  grid-template-rows: auto;\n  border-radius: 25px;\n  box-shadow:\n    0px 0.9px 1.3px hsl(200 200 200 / 0.03),\n    0.1px 3.6px 5.2px -0.1px hsl(200 200 200 / 0.12),\n    0.1px 7.3px 10.6px -0.2px hsl(200 200 200 / 0.2),\n    0.2px 14.9px 21.6px -0.4px hsl(200 200 200 / 0.29);\n}\n\n.keypad button {\n  border-width: 0;\n  background-color: #eee;\n  border-radius: 25px;\n  font-size: 1.25rem;\n  padding: 10px;\n  margin: 5px;\n  color: var(--black);\n  cursor: pointer;\n}\n\n#copyright {\n  text-align: center;\n  position: absolute;\n  width: 100%;\n  font-size: 0.75rem;\n  color: var(--lightgrey);\n  bottom: 10px;\n}\n'],sourceRoot:""}]);const i=A},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var l=0;l<n.length;l++){var c=[].concat(n[l]);r&&A[c[0]]||(void 0!==o&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=o),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),a&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=a):c[4]="".concat(a)),e.push(c))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},A=[],i=0;i<n.length;i++){var s=n[i],l=r.base?s[0]+r.base:s[0],c=o[l]||0,d="".concat(l," ").concat(c);o[l]=c+1;var p=t(d),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var m=a(u,r);r.byIndex=i,e.splice(i,0,{identifier:d,updater:m,references:1})}A.push(d)}return A}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var A=0;A<o.length;A++){var i=t(o[A]);e[i].references--}for(var s=r(n,a),l=0;l<o.length;l++){var c=t(o[l]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),A=t.n(o),i=t(565),s=t.n(i),l=t(216),c=t.n(l),d=t(589),p=t.n(d),u=t(426),m={};m.styleTagTransform=p(),m.setAttributes=s(),m.insert=A().bind(null,"head"),m.domAPI=a(),m.insertStyleElement=c(),e()(u.Z,m),u.Z&&u.Z.locals&&u.Z.locals;const B={plateVisualizer:{name:"Plate Visualizer",description:"See which plates to use for the weight you're going to lift."},oneRepMax:{name:"One-Rep Max Calculator",description:"Estimate the maximum weight you can lift for a single rep. (Uses the Brzycki formula.)"},strengthStandards:{name:"Strength Standards",description:"Compare your lifts to standards for your weight class."}};(()=>{const n=document.querySelector("body");n.appendChild(function(n){const e=document.createElement("div");e.setAttribute("id","header");const t=document.createElement("a");t.textContent="Home",e.appendChild(t);const r=document.createElement("h1");r.textContent="Barbell Tools",e.appendChild(r);const a=document.createElement("a");return a.textContent="Settings",e.appendChild(a),e}()),n.appendChild(function(n){const e=document.createElement("div");return e.setAttribute("id","wrapper"),n.forEach((n=>{e.appendChild(n)})),e}(function(n){const e=[];return Object.values(n).forEach((n=>{const t=document.createElement("a");t.setAttribute("class","card"),t.setAttribute("href","#");const r=document.createElement("h2");r.textContent=n.name,t.appendChild(r);const a=document.createElement("p");a.textContent=n.description,t.appendChild(a),e.push(t)})),e}(B))),n.appendChild(function(){const n=document.createElement("p");return n.setAttribute("id","copyright"),n.textContent=`© ${(new Date).getFullYear()} Stephen Roe`,n}())})()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,